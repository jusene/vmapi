// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/host/{host}": {
            "get": {
                "description": "Host Monitor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HOSTS"
                ],
                "summary": "Host Monitor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "HOST",
                        "name": "host",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Res"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Err"
                        }
                    }
                }
            }
        },
        "/hosts/vm/{host}": {
            "get": {
                "description": "Host VM Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HOSTS"
                ],
                "summary": "Host VM Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "HOST",
                        "name": "host",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Res"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Err"
                        }
                    }
                }
            }
        },
        "/ips": {
            "get": {
                "description": "Get ip pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPS"
                ],
                "summary": "Get ip pool",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.IPS"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Err"
                        }
                    }
                }
            },
            "post": {
                "description": "Create ip pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPS"
                ],
                "summary": "Create ip pool",
                "parameters": [
                    {
                        "description": "IP地址段",
                        "name": "net",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NET"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Res"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Err"
                        }
                    }
                }
            }
        },
        "/ips/{ip}": {
            "put": {
                "description": "Append a ip to ip pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPS"
                ],
                "summary": "Append a ip to ip pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "IP",
                        "name": "ip",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Res"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Err"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a ip from ip pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPS"
                ],
                "summary": "Remove a ip from ip pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "IP",
                        "name": "ip",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Res"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Err"
                        }
                    }
                }
            }
        },
        "/vms": {
            "post": {
                "description": "Create a vm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMS"
                ],
                "summary": "Create a vm",
                "parameters": [
                    {
                        "description": "vm",
                        "name": "vm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.VMDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Res"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Res"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Err"
                        }
                    }
                }
            }
        },
        "/vms/{phy}": {
            "get": {
                "description": "Get all vms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMS"
                ],
                "summary": "Get all vms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "物理机IP",
                        "name": "phy",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VMS"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Err"
                        }
                    }
                }
            }
        },
        "/vms/{phy}/{vm}": {
            "get": {
                "description": "Get a vm detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMS"
                ],
                "summary": "Get a vm detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "物理机IP",
                        "name": "phy",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "虚拟机NAME",
                        "name": "vm",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VMC"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Err"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Err"
                        }
                    }
                }
            },
            "put": {
                "description": "Controller a vm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMS"
                ],
                "summary": "Controller a vm",
                "parameters": [
                    {
                        "description": "操作",
                        "name": "operator",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/model.OP"
                        }
                    },
                    {
                        "type": "string",
                        "description": "物理机IP",
                        "name": "phy",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "虚拟机NAME",
                        "name": "vm",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Res"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Err"
                        }
                    }
                }
            },
            "delete": {
                "description": "Shutdown a vm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMS"
                ],
                "summary": "Shutdown a vm",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "强制关机",
                        "name": "Force",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "物理机IP",
                        "name": "phy",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "虚拟机NAME",
                        "name": "vm",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Res"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/model.Err"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Err"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Err": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "integer"
                },
                "message": {
                    "type": "object"
                }
            }
        },
        "model.IPS": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "model.NET": {
            "type": "object",
            "properties": {
                "network": {
                    "type": "string"
                }
            }
        },
        "model.OP": {
            "type": "object",
            "properties": {
                "operator": {
                    "type": "string"
                }
            }
        },
        "model.Res": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "integer"
                },
                "message": {
                    "type": "object"
                }
            }
        },
        "model.VM": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "model.VMC": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "integer"
                },
                "dns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gateway": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "netmask": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "model.VMDetail": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "mask": {
                    "type": "string"
                },
                "mem": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pyhIp": {
                    "type": "string"
                }
            }
        },
        "model.VMS": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/model.VM"
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/api/v1",
	Schemes:     []string{"http"},
	Title:       "Virtual Machine Api",
	Description: "Virtual Machine Api",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
